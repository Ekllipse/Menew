package aplication;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import java.util.Scanner;

import entities.ChaveValor;

public class Program {

	public static void main(String[] args) {
		Locale.setDefault(Locale.US);

		Scanner sc = new Scanner(System.in);

		ChaveValor vectCV[] = { new ChaveValor("NUM_CONTROLE"), new ChaveValor("NUMERO"), new ChaveValor("LETRA"),
				new ChaveValor("STATUS"), new ChaveValor("MESA"), new ChaveValor("COMANDA"), new ChaveValor("GRUPO"),
				new ChaveValor("FONE"), new ChaveValor("NOME"), new ChaveValor("ENTREGADOR"), new ChaveValor("data"),
				new ChaveValor("HORA"), new ChaveValor("GARCON"), new ChaveValor("NPESSOAS"),
				new ChaveValor("APARTAMENTO"), new ChaveValor("DESCONTO"), new ChaveValor("TROCO"),
				new ChaveValor("DT_ABERTURA"), new ChaveValor("HR_ABERTURA"), new ChaveValor("DT_FECHAMENTO"),
				new ChaveValor("HR_FECHAMENTO"), new ChaveValor("FORMA"), new ChaveValor("AVISO"),
				new ChaveValor("ABERTO"), new ChaveValor("COD_VIP"), new ChaveValor("CAIXA"), new ChaveValor("DT_MOV"),
				new ChaveValor("TN_MOV"), new ChaveValor("DT_FECHA"), new ChaveValor("HR_FECHA"),
				new ChaveValor("COO_PREVENDA"), new ChaveValor("COO_CUPOM"), new ChaveValor("ACRESCIMO"),
				new ChaveValor("TERMINAL"), new ChaveValor("TROCO_PARA"), new ChaveValor("HORA_SAIDA"),
				new ChaveValor("TAXA"), new ChaveValor("PONTOS"), new ChaveValor("VIP"), new ChaveValor("TIPO_PAG"),
				new ChaveValor("MSG"), new ChaveValor("LANCTO_ORIGEM"), new ChaveValor("CONSUMACAO"),
				new ChaveValor("LIB_CONSUMACAO"), new ChaveValor("BX_ENTREGA"), new ChaveValor("N_FABRICACAO"),
				new ChaveValor("COD_FIDELIDADE"), new ChaveValor("VL_FIDELIDADE"), new ChaveValor("SALDO_FIDELIDADE"),
				new ChaveValor("FORMA_PAG"), new ChaveValor("OPERACAO"), new ChaveValor("TEMPO_PEDIDO"),
				new ChaveValor("NUM_CARTAO"), new ChaveValor("VAL_CARTAO"), new ChaveValor("CODIGO_SEG"),
				new ChaveValor("HORA_PROG"), new ChaveValor("CUPOM_DATA"), new ChaveValor("CUPOM_HORA"),
				new ChaveValor("N_FABRICACAO_CF"), new ChaveValor("TIPO_DESCONTO"), new ChaveValor("NOTIFICACAO"),
				new ChaveValor("COMPUTADOR"), new ChaveValor("DT_NASC"), new ChaveValor("ENCOMENDA_DATA"),
				new ChaveValor("ENCOMENDA_HORA"), new ChaveValor("SENHA_DIGITADA"), new ChaveValor("FID_REF"),
				new ChaveValor("FID_CODIGO"), new ChaveValor("REG_IFOOD"), new ChaveValor("TIPO_FORMA_PAG"),
				new ChaveValor("TABELA"), new ChaveValor("SIF"), new ChaveValor("PER_SERVICO"),
				new ChaveValor("CPF_IDENT"), new ChaveValor("SALDO_PRE"), new ChaveValor("SALDO_POS"),
				new ChaveValor("INTEGRA"), new ChaveValor("COD_IAPP"), new ChaveValor("FID_CPF"),
				new ChaveValor("CENTRO"), new ChaveValor("OBS_PAGTO"), new ChaveValor("SINC_TEMP"),
				new ChaveValor("INTG_TIPO"), new ChaveValor("RECEBIDO_MOBILE"), new ChaveValor("STATUS_ENTREGA"),
				new ChaveValor("ENTREGA_SAIDA"), new ChaveValor("INTG_IDENTIFICADOR"), new ChaveValor("INTG_PAGAMENTO"),
				new ChaveValor("PRECONTA_NOTIF"), new ChaveValor("ENTREGA_DATA"), new ChaveValor("BX_ENTREGA_DATA"),
				new ChaveValor("BX_ENTREGA_HORA"), new ChaveValor("MOOVERY_STATUS"), new ChaveValor("TRACKING"),
				new ChaveValor("IDENTIFIER"), new ChaveValor("DELIVERY_FEE"), new ChaveValor("DISTANCE"),
				new ChaveValor("LNG_DESTINATION"), new ChaveValor("LAT_DESTINATION"), new ChaveValor("DESCONTO_PROMO"),
				new ChaveValor("DESCONTO_DIG"), new ChaveValor("ENC_DATA"), new ChaveValor("ENC_TURNO"),
				new ChaveValor("ENC_OPE"), new ChaveValor("INTG_TAXA"), new ChaveValor("INTG_ENTREGA"),
				new ChaveValor("ANIV_IDENT"), new ChaveValor("ANIV_PROD"), new ChaveValor("DESCONTO_MARKETPLACE"),
				new ChaveValor("FANTASIA"), new ChaveValor("PAINEL"), new ChaveValor("PAINEL_DATA"),
				new ChaveValor("PAINEL_HORA"), new ChaveValor("DELIVERED_BY"), new ChaveValor("DESCONTO_DIG_TIPO"),
				new ChaveValor("VIA"), new ChaveValor("ANEXO"), new ChaveValor("PAGAMENTO_ONLINE"),
				new ChaveValor("ID_MARKETPLACE"), new ChaveValor("NOME_IDENT"), new ChaveValor("DESCONTO_DIG_IDENT"),
				new ChaveValor("EXTERNAL_CARD"), };
		List<String> listSQL = new ArrayList<>();
		String path = "C:\\ConvertMYSQLtoFirebird\\MYSQL.csv";
		try (BufferedReader br = new BufferedReader(new FileReader(path))) {
			String linhaOut = br.readLine();
			String linha[] = linhaOut.split(",");

			for (int i = 0; i < vectCV.length; i++) {
				for (int j = 0; j < linha.length; j++) {
					if (vectCV[i].getCampo().toLowerCase().equals(linha[j])) {
						vectCV[i].setPosicao(j);
					}
				}
			}
			linhaOut = br.readLine();

			while (linhaOut != null) {
				linha = linhaOut.split(",");
				linhaOut = br.readLine();
				for (int i = 0; i < vectCV.length; i++) {
					for (int j = 0; j < linha.length; j++)
						vectCV[i].setValor(linha[vectCV[i].getPosicao()]);
				}

				listSQL.add("UPDATE OR INSERT INTO TBCABCONTA(" + vectCV[0].getCampo() + "," + vectCV[1].getCampo()
						+ "," + vectCV[2].getCampo() + "," + vectCV[3].getCampo() + "," + vectCV[4].getCampo() + ","
						+ vectCV[5].getCampo() + "," + vectCV[6].getCampo() + "," + vectCV[7].getCampo() + ","
						+ vectCV[8].getCampo() + "," + vectCV[9].getCampo() + "," + vectCV[10].getCampo() + ","
						+ vectCV[11].getCampo() + "," + vectCV[12].getCampo() + "," + vectCV[13].getCampo() + ","
						+ vectCV[14].getCampo() + "," + vectCV[15].getCampo() + "," + vectCV[16].getCampo() + ","
						+ vectCV[17].getCampo() + "," + vectCV[18].getCampo() + "," + vectCV[19].getCampo() + ","
						+ vectCV[20].getCampo() + "," + vectCV[21].getCampo() + "," + vectCV[22].getCampo() + ","
						+ vectCV[23].getCampo() + "," + vectCV[24].getCampo() + "," + vectCV[25].getCampo() + ","
						+ vectCV[26].getCampo() + "," + vectCV[27].getCampo() + "," + vectCV[28].getCampo() + ","
						+ vectCV[29].getCampo() + "," + vectCV[30].getCampo() + "," + vectCV[31].getCampo() + ","
						+ vectCV[32].getCampo() + "," + vectCV[33].getCampo() + "," + vectCV[34].getCampo() + ","
						+ vectCV[35].getCampo() + "," + vectCV[36].getCampo() + "," + vectCV[37].getCampo() + ","
						+ vectCV[38].getCampo() + "," + vectCV[39].getCampo() + "," + vectCV[40].getCampo() + ","
						+ vectCV[41].getCampo() + "," + vectCV[42].getCampo() + "," + vectCV[43].getCampo() + ","
						+ vectCV[44].getCampo() + "," + vectCV[45].getCampo() + "," + vectCV[46].getCampo() + ","
						+ vectCV[47].getCampo() + "," + vectCV[48].getCampo() + "," + vectCV[49].getCampo() + ","
						+ vectCV[50].getCampo() + "," + vectCV[51].getCampo() + "," + vectCV[52].getCampo() + ","
						+ vectCV[53].getCampo() + "," + vectCV[54].getCampo() + "," + vectCV[55].getCampo() + ","
						+ vectCV[56].getCampo() + "," + vectCV[57].getCampo() + "," + vectCV[58].getCampo() + ","
						+ vectCV[59].getCampo() + "," + vectCV[60].getCampo() + "," + vectCV[61].getCampo() + ","
						+ vectCV[62].getCampo() + "," + vectCV[63].getCampo() + "," + vectCV[64].getCampo() + ","
						+ vectCV[65].getCampo() + "," + vectCV[66].getCampo() + "," + vectCV[67].getCampo() + ","
						+ vectCV[68].getCampo() + "," + vectCV[69].getCampo() + "," + vectCV[70].getCampo() + ","
						+ vectCV[71].getCampo() + "," + vectCV[72].getCampo() + "," + vectCV[73].getCampo() + ","
						+ vectCV[74].getCampo() + "," + vectCV[75].getCampo() + "," + vectCV[76].getCampo() + ","
						+ vectCV[77].getCampo() + "," + vectCV[78].getCampo() + "," + vectCV[79].getCampo() + ","
						+ vectCV[80].getCampo() + "," + vectCV[81].getCampo() + "," + vectCV[82].getCampo() + ","
						+ vectCV[83].getCampo() + "," + vectCV[84].getCampo() + "," + vectCV[85].getCampo() + ","
						+ vectCV[86].getCampo() + "," + vectCV[87].getCampo() + "," + vectCV[88].getCampo() + ","
						+ vectCV[89].getCampo() + "," + vectCV[90].getCampo() + "," + vectCV[91].getCampo() + ","
						+ vectCV[92].getCampo() + "," + vectCV[93].getCampo() + "," + vectCV[94].getCampo() + ","
						+ vectCV[95].getCampo() + "," + vectCV[96].getCampo() + "," + vectCV[97].getCampo() + ","
						+ vectCV[98].getCampo() + "," + vectCV[99].getCampo() + "," + vectCV[100].getCampo() + ","
						+ vectCV[101].getCampo() + "," + vectCV[102].getCampo() + "," + vectCV[103].getCampo() + ","
						+ vectCV[104].getCampo() + "," + vectCV[105].getCampo() + "," + vectCV[106].getCampo() + ","
						+ vectCV[107].getCampo() + "," + vectCV[108].getCampo() + "," + vectCV[109].getCampo() + ","
						+ vectCV[110].getCampo() + "," + vectCV[111].getCampo() + "," + vectCV[112].getCampo() + ","
						+ vectCV[113].getCampo() + "," + vectCV[114].getCampo() + "," + vectCV[115].getCampo() + ","
						+ vectCV[116].getCampo() + "," + vectCV[117].getCampo() + "," + vectCV[118].getCampo() + ","
						+ vectCV[119].getCampo() + "," + vectCV[120].getCampo() + "," + vectCV[121].getCampo() + ")"
						+ "VALUES (" + vectCV[0].getValor() + "," + vectCV[1].getValor() + "," + vectCV[2].getValor()
						+ "," + vectCV[3].getValor() + "," + vectCV[4].getValor() + "," + vectCV[5].getValor() + ","
						+ vectCV[6].getValor() + "," + vectCV[7].getValor() + "," + vectCV[8].getValor() + ","
						+ vectCV[9].getValor() + "," + vectCV[10].getValor() + "," + vectCV[11].getValor() + ","
						+ vectCV[12].getValor() + "," + vectCV[13].getValor() + "," + vectCV[14].getValor() + ","
						+ vectCV[15].getValor() + "," + vectCV[16].getValor() + "," + vectCV[17].getValor() + ","
						+ vectCV[18].getValor() + "," + vectCV[19].getValor() + "," + vectCV[20].getValor() + ","
						+ vectCV[21].getValor() + "," + vectCV[22].getValor() + "," + vectCV[23].getValor() + ","
						+ vectCV[24].getValor() + "," + vectCV[25].getValor() + "," + vectCV[26].getValor() + ","
						+ vectCV[27].getValor() + "," + vectCV[28].getValor() + "," + vectCV[29].getValor() + ","
						+ vectCV[30].getValor() + "," + vectCV[31].getValor() + "," + vectCV[32].getValor() + ","
						+ vectCV[33].getValor() + "," + vectCV[34].getValor() + "," + vectCV[35].getValor() + ","
						+ vectCV[36].getValor() + "," + vectCV[37].getValor() + "," + vectCV[38].getValor() + ","
						+ vectCV[39].getValor() + "," + vectCV[40].getValor() + "," + vectCV[41].getValor() + ","
						+ vectCV[42].getValor() + "," + vectCV[43].getValor() + "," + vectCV[44].getValor() + ","
						+ vectCV[45].getValor() + "," + vectCV[46].getValor() + "," + vectCV[47].getValor() + ","
						+ vectCV[48].getValor() + "," + vectCV[49].getValor() + "," + vectCV[50].getValor() + ","
						+ vectCV[51].getValor() + "," + vectCV[52].getValor() + "," + vectCV[53].getValor() + ","
						+ vectCV[54].getValor() + "," + vectCV[55].getValor() + "," + vectCV[56].getValor() + ","
						+ vectCV[57].getValor() + "," + vectCV[58].getValor() + "," + vectCV[59].getValor() + ","
						+ vectCV[60].getValor() + "," + vectCV[61].getValor() + "," + vectCV[62].getValor() + ","
						+ vectCV[63].getValor() + "," + vectCV[64].getValor() + "," + vectCV[65].getValor() + ","
						+ vectCV[66].getValor() + "," + vectCV[67].getValor() + "," + vectCV[68].getValor() + ","
						+ vectCV[69].getValor() + "," + vectCV[70].getValor() + "," + vectCV[71].getValor() + ","
						+ vectCV[72].getValor() + "," + vectCV[73].getValor() + "," + vectCV[74].getValor() + ","
						+ vectCV[75].getValor() + "," + vectCV[76].getValor() + "," + vectCV[77].getValor() + ","
						+ vectCV[78].getValor() + "," + vectCV[79].getValor() + "," + vectCV[80].getValor() + ","
						+ vectCV[81].getValor() + "," + vectCV[82].getValor() + "," + vectCV[83].getValor() + ","
						+ vectCV[84].getValor() + "," + vectCV[85].getValor() + "," + vectCV[86].getValor() + ","
						+ vectCV[87].getValor() + "," + vectCV[88].getValor() + "," + vectCV[89].getValor() + ","
						+ vectCV[90].getValor() + "," + vectCV[91].getValor() + "," + vectCV[92].getValor() + ","
						+ vectCV[93].getValor() + "," + vectCV[94].getValor() + "," + vectCV[95].getValor() + ","
						+ vectCV[96].getValor() + "," + vectCV[97].getValor() + "," + vectCV[98].getValor() + ","
						+ vectCV[99].getValor() + "," + vectCV[100].getValor() + "," + vectCV[101].getValor() + ","
						+ vectCV[102].getValor() + "," + vectCV[103].getValor() + "," + vectCV[104].getValor() + ","
						+ vectCV[105].getValor() + "," + vectCV[106].getValor() + "," + vectCV[107].getValor() + ","
						+ vectCV[108].getValor() + "," + vectCV[109].getValor() + "," + vectCV[110].getValor() + ","
						+ vectCV[111].getValor() + "," + vectCV[112].getValor() + "," + vectCV[113].getValor() + ","
						+ vectCV[114].getValor() + "," + vectCV[115].getValor() + "," + vectCV[116].getValor() + ","
						+ vectCV[117].getValor() + "," + vectCV[118].getValor() + "," + vectCV[119].getValor() + ","
						+ vectCV[120].getValor() + "," + vectCV[121].getValor() + ");");

			}

			for (String x : listSQL) {
				System.out.println(x);

			}

		} catch (IOException e) {
			System.out.println(e.getMessage());
		}

		sc.close();

	}

}
